name: Django CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies with pipenv
      run: |
        python -m pip install --upgrade pip
        pip install pipenv
        pipenv install --deploy --dev
    - name: Create env file
      run: |
          touch DataWarehouse/DataWarehouse/parameter.py
          echo class ENV: >> DataWarehouse/DataWarehouse/parameter.py
          echo "    DJANGO_SECRET_KEY = 'django'"  >> DataWarehouse/DataWarehouse/parameter.py
          echo "    DEBUG = True" >> DataWarehouse/DataWarehouse/parameter.py
          echo "    ALLOWED_HOSTS = ['*']" >> DataWarehouse/DataWarehouse/parameter.py
          echo "    DB_CONFIG = {'default': {'ENGINE': 'django.db.backends.mysql','NAME': 'DWH','USER': 'testerdb','PASSWORD': 'testing','HOST': 'localhost','PORT': '3306',}}" >> DataWarehouse/DataWarehouse/parameter.py
          echo "    MAX_REQUEST_URL = 1000" >> DataWarehouse/DataWarehouse/parameter.py
          cat DataWarehouse/DataWarehouse/parameter.py
    - name: Run Tests
      run: |
        pipenv run python DataWarehouse/manage.py test
    
  deploy:
    needs: [test]
    runs-on: ubuntu-latest

    steps:
      - name: deploy with SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.USERNAME }}@${{ env.HOST }}
          port: 22
          password: ${{ env.PRIVATE_KEY }}
          script: |
            cd /var/www/html/DataWarehouse/
            git pull
